@page
@using Logic_Layer
@model MindfulLens_WebApp.Pages.Admin.ReviewsModel
@{
    Layout = "~/Pages/Shared/_AdminLayout.cshtml";
    ViewData["Title"] = "Reviews";
}

<div class="tab-label">Reviews and feedback</div>
<div class="content-controls-container">
    <div class="two-divs-div">
        <input id="query-textbox" type="text" class="custom-input" placeholder="Search" style="margin: auto; width: 210px; height: 40px; font-size: 20px;" value="@Model.search_query" />
        <div class="search-button" onclick="querySearch()"><img src="~/Group 2.png" width="100%" draggable="false" style="pointer-events: none; user-select: none;"></div>
    </div>
    <a class="blue-button" style="font-size: 20px;" href="/Admin/Reviews-And-Feedback">Show all</a>
    <div class="two-divs-div">
        <div class="profile-credentials" style="margin: auto;">Sort by: </div>
        <select name="Sortings" id="Sortings" class="custom-combobox sort-combobox" onchange="myChooseOption(this)">
            @if (Model.sort_method == null || (Model.sort_method != "Ranking" && Model.sort_method != "CreationDate") || (Model.sort_order != "ASC" && Model.sort_order != "DESC"))
            {
                <option value="Choose option" disabled selected>Choose option</option>
            }
            else
            {
                <option value="Choose option" disabled>Choose option</option>
            }
            @if (Model.sort_method == "Ranking" && Model.sort_order == "ASC")
            {
                <option value="ranking&order=asc" selected>Ranking ascending</option>
            }
            else
            {
                <option value="ranking&order=asc">Ranking ascending</option>
            }
            @if (Model.sort_method == "Ranking" && Model.sort_order == "DESC")
            {
                <option value="ranking&order=desc" selected>Ranking descending</option>
            }
            else
            {
                <option value="ranking&order=desc">Ranking descending</option>
            }
            @if (Model.sort_method == "CreationDate" && Model.sort_order == "ASC")
            {
                <option value="time&order=asc" selected>Time added ascending</option>
            }
            else
            {
                <option value="time&order=asc">Time added ascending</option>
            }
            @if (Model.sort_method == "CreationDate" && Model.sort_order == "DESC")
            {
                <option value="time&order=desc" selected>Time added descending</option>
            }
            else
            {
                <option value="time&order=desc">Time added descending</option>
            }
        </select>
    </div>
</div>
@if (Model.reviews.Length > 0)
{
    <div class="publications-flex" id="scrollable-div">
        <div class="publications-container">
            @for (int i = 0; i < Model.reviews.Length - 1; i++)
            {
                <div class="three-dot-publication-div">
                    <div class="author-div">
                        @if (!Model.reviews[i].Creator.Banned)
                        {
                            <div class="author-photo">
                                @if (Model.reviews[i].Creator.Photo != null)
                                {
                                    string imageBase64 = Convert.ToBase64String(Model.reviews[i].Creator.Photo);
                                    string imageSrc = $"data:image/png;base64,{imageBase64}";
                                    <img src="@imageSrc" draggable="false" style="pointer-events: none; user-select: none; width: 100%;" />
                                }
                            </div>
                            <div class="author-name">@Model.reviews[i].Creator.Name</div>
                        }
                        else
                        {
                            <div class="author-photo"></div>
                            <div class="author-name">@CommonData.userBanned</div>
                        }
                    </div>
                    <div class="publication-text">@Model.reviews[i].Text</div>
                    <div class="review-rating">@Model.reviews[i].Ranking/10</div>
                    <div class="three-dot-grid">
                        <div class="regular-label" onclick="openThreeDotMenu(this)" style="font-size: 30px; text-align: center; cursor: pointer;" id="@Model.reviews[i].ID">&#10247</div>
                        <div class="three-dot-none three-dot-menu-start" id="threeDotMenu-@Model.reviews[i].ID">
                            <div class="three-dot-menu">
                                <div class="three-dot-button" id="Delete-@Model.reviews[i].ID" onclick="deleteReview(this);">Delete</div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="white-line"></div>
            }

            <div class="three-dot-publication-div">
                <div class="author-div">
                    @if (!Model.reviews[Model.reviews.Length - 1].Creator.Banned)
                    {
                        <div class="author-photo">
                            @if (Model.reviews[Model.reviews.Length - 1].Creator.Photo != null)
                            {
                                string imageBase64 = Convert.ToBase64String(Model.reviews[Model.reviews.Length - 1].Creator.Photo);
                                string imageSrc = $"data:image/png;base64,{imageBase64}";
                                <img src="@imageSrc" draggable="false" style="pointer-events: none; user-select: none; width: 100%;" />
                            }
                        </div>
                        <div class="author-name">@Model.reviews[Model.reviews.Length - 1].Creator.Name</div>
                    }
                    else
                    {
                        <div class="author-photo"></div>
                        <div class="author-name">@CommonData.userBanned</div>
                    }
                </div>
                <div class="publication-text">@Model.reviews[Model.reviews.Length - 1].Text</div>
                <div class="review-rating">@Model.reviews[Model.reviews.Length - 1].Ranking/10</div>
                <div class="three-dot-grid">
                    <div class="regular-label" onclick="openThreeDotMenu(this)" style="font-size: 30px; text-align: center; cursor: pointer;" id="@Model.reviews[Model.reviews.Length - 1].ID">&#10247</div>
                    <div class="three-dot-none three-dot-menu-start" id="threeDotMenu-@Model.reviews[Model.reviews.Length - 1].ID">
                        <div class="three-dot-menu">
                            <div class="three-dot-button" id="Delete-@Model.reviews[Model.reviews.Length - 1].ID" onclick="deleteReview(this);">Delete</div>
                        </div>
                    </div>
                </div>
            </div>

            @if (Model.showMoreButton)
            {
                <div class="blue-button" onclick="showMore()">Load more</div>
                <div style="height: 100px;"></div>
            }
        </div>
    </div>
}

<input type="text" id="Load-number" class="hidden-input" value="@Model.load_number" readonly />
<input type="text" id="Load-step" class="hidden-input" value="@ReviewsAndFeedbackModel.load_step" readonly />


<script>
    function deleteReview(e) {
        let a = "Are you sure you want to delete this publication?";
        if (confirm(a) == true) {
            var t = "/Admin/Reviews-And-Feedback?";

            @if (Model.search_query != null)
            {
                @: var q = document.getElementById("query-textbox");
                @: t = t + "search=" + q.value + "&";
            }

            @if (Model.sort_method != null)
            {
                @: var s = document.getElementById("Sortings");
                @: t = t + "sort=" + s.value + "&";
            }

            @if (Model.load_number > ReviewsAndFeedbackModel.load_step) 
            {
                @: var b = document.getElementById("Load-number").value - document.getElementById("Load-step").value;
                @: t = t + "number=" + b + "&";
            }

            window.location.href = t + "review_id=" + e.id.split("-")[1];
        }
    }

    function showAll() {
        goToTop();
        window.location.href = "/Admin/Reviews-And-Feedback";
    }

    function myChooseOption(e) {
        var t = "/Admin/Reviews-And-Feedback?";
        @if (Model.search_query != null)
        {
            @: var q = document.getElementById("query-textbox");
            @:t = t + "search=" + q.value + "&";
        }

        window.location.href = t + "sort=" + e.value;
        goToTop();
    }

    function querySearch() {
        var t = "/Admin/Reviews-And-Feedback?";

        var e = document.getElementById("query-textbox");
        t = t + "search=" + e.value + "&";

        @if (Model.sort_method != null)
        {
            @: var s = document.getElementById("Sortings");
            @:t = t + "sort=" + s.value;
        }

        window.location.href = t;
        goToTop();
    }

    function showMore() {
        var t = "/Admin/Reviews-And-Feedback?";

        @if (Model.search_query != null)
        {
            @: var q = document.getElementById("query-textbox");
            @:t = t + "search=" + q.value + "&";
        }

        @if (Model.sort_method != null)
        {
            @: var s = document.getElementById("Sortings");
            @:t = t + "sort=" + s.value + "&";
        }

        window.location.href = t + "number=" + document.getElementById("Load-number").value;
    }


    const scrollableDiv = document.getElementById('scrollable-div');

    document.addEventListener('DOMContentLoaded', (event) => {

        // Save scroll position before page unload
        window.addEventListener('beforeunload', () => {
            localStorage.setItem('adminReviewsScrollPosition', scrollableDiv.scrollTop);
        });


        //Restore scroll position on page load
        const savedScrollPosition = localStorage.getItem('adminReviewsScrollPosition');
        if (savedScrollPosition !== null) {
            scrollableDiv.scrollTop = savedScrollPosition;
        }
    });

    function goToTop() {
        scrollableDiv.scrollTop = 0;
        localStorage.setItem('adminReviewsScrollPosition', 0);
    }


    function openThreeDotMenu(e) {
        var x = document.getElementById("threeDotMenu-" + e.id);
        var elements = document.getElementsByClassName("three-dot-none");
        for (var i = 0; i < elements.length; i++) {
            if (elements[i] != x) {
                elements[i].style.display = "none";
            }
        }
        if (x.style.display === "none" || x.classList.contains("three-dot-menu-start")) {
            x.style.display = "block";
            x.classList.remove("three-dot-menu-start");
        } else {
            x.style.display = "none";
        }
    }

    function startFunc() {
        var t = document.referrer.split('/')[4];
        var r = window.location.href.split('/')[4];
        if (t.includes('?')) {
            t = t.split('?')[0];
        }
        if (r.includes('?')) {
            r = r.split('?')[0];
        }

        if (t !== r && (t === "Home" || t === "Profile" || t === "Forum" || t === "Introduction" || t === "Analytics-And-Statistics" || t === "Potentially-Inappropriate-Content" || t === "Questions-From-Users" || t === "Reported-Content" || t === "Reviews-And-Feedback")) {
            document.querySelector(".sidebar").style.left = "0px";
            goToTop();
        }

        if (t === "Home" && r !== "Home") {
            var e = document.getElementById("logo");
            e.classList.add("main-logo");
            e.classList.remove("side-logo");
        }
    }
    startFunc();
</script>
