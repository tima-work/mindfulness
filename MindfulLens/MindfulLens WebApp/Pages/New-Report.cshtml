@page
@using Logic_Layer
@using Logic_Layer.Classes
@model MindfulLens_WebApp.Pages.New_ReportModel
@{
    ViewData["Title"] = "New report";
    Layout = "~/Pages/Shared/_NoSidebarLayout.cshtml";
}

@if (Model.ReportedPublication == null)
{
    <div class="tab-label">Sorry, we couldn't find this publication</div>
}
else if (Model.publication_type == "ForumPublication" && (Model.ReportedPublication as ForumPublication).IsDeleted)
{
    <div class="tab-label">Sorry, this publication was deleted</div>
}
else
{
    <div class="tab-label">Report</div>

    <form method="post">
        <div class="publications-flex" style="width: 50%; height: 60%; top: 70%; transform: translate(-50%, -70%);">
            <div class="publications-container" style="width: 90%;">
                <div class="reported-publication" style="width: 100%;">
                    <div class="author-div">
                        @if (!Model.ReportedPublication.Creator.Banned)
                        {
                            <div class="author-photo">
                                @if (Model.ReportedPublication.Creator.Photo != null)
                                {
                                    string imageBase64 = Convert.ToBase64String(Model.ReportedPublication.Creator.Photo);
                                    string imageSrc = $"data:image/png;base64,{imageBase64}";
                                    <img src="@imageSrc" draggable="false" style="pointer-events: none; user-select: none; width: 100%;" />
                                }
                            </div>
                            <div class="author-name">@Model.ReportedPublication.Creator.Name</div>
                        }
                        else
                        {
                            <div class="author-photo"></div>
                            <div class="author-name">@CommonData.userBanned</div>
                        }
                    </div>
                    <div class="publication-text" style="font-style: italic;">@Model.ReportedPublication.Text</div>
                    @switch (Model.publication_type)
                    {
                        case "ForumPublication":
                            <div class="read-more">Type: Forum publication</div>
                            break;
                        case "Review":
                            <div class="read-more">Type: Review</div>
                            break;
                    }
                </div>

                <div class="login-label">Reason</div>
                <input asp-for="reportModel.Reason" class="login-input" placeholder="Enter reason" type="text" />
                <div class="login-error-label">
                    <span asp-validation-for="reportModel.Reason"></span>
                </div>

                <div class="login-label">Report text</div>
                <textarea asp-for="reportModel.Text" class="review-input" placeholder="Enter report text"></textarea>
                <div class="login-error-label">
                    <span asp-validation-for="reportModel.Text"></span>
                </div>
                <div class="login-error-label">@Model.errorMessage</div>
                <div style="width: 100%; height: 15px; background-color: transparent;"></div>
            </div>
        </div>

        <div class="add-new blue-button">
            <input type="submit" asp-page-handler="NewReport" value="Publish" />
        </div>

        <input class="hidden-input" type="text" value="@Model.ReportedPublication.ID" name="reported-publication-id" readonly />
        <input class="hidden-input" type="text" value="@Model.ReportedPublication.GetType().Name" name="reported-publication-type" readonly />

    </form>
}

<partial name="_ValidationScriptsPartial" />